{"version":3,"sources":["Component.tsx","App.tsx","index.tsx"],"names":["KeyPressed","state","keyPressed","inform","document","removeEventListener","keyBoardHandler","event","message","key","setState","setTimeout","addEventListener","this","message2","Component","App","click","className","type","onClick","React","ReactDOM","render","getElementById"],"mappings":"yOAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAoBEC,OAAS,WACPC,SAASC,oBAAoB,QAAS,EAAKC,kBArB/C,EAwBEA,gBAAkB,SAACC,GACjB,IAAMC,EAAO,yCAA8BD,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAOE,KAElD,EAAKC,SAAS,CAAER,WAAYM,KA3BhC,uDAKE,WAAqB,IAAD,OAClBG,YAAW,WACT,EAAKD,SAAS,CAAER,WAAY,0BAC3B,OARP,gCAWE,WAAsB,IAAD,OACnBE,SAASQ,iBAAiB,SACxB,SAACL,GAAD,OAA0B,EAAKD,gBAAgBC,QAbrD,kCAgBE,WACEM,KAAKV,WAjBT,oBA8BE,WACE,IAAMW,EAAWD,KAAKZ,MAAMC,WAE5B,OACE,mCACGY,QAnCT,GAAgCC,aCM1BC,G,kNACJf,MAAQ,CACNgB,OAAO,G,4CAGT,WAAU,IAAD,OACCA,EAAUJ,KAAKZ,MAAfgB,MASR,OACE,qCACE,qBAAKC,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACID,GAAS,cAAC,EAAD,QAGf,wBAAQE,KAAK,SAASC,QAfL,WACnB,EAAKV,SAAS,CAAEO,OAAO,KAcrB,6BACA,wBAAQE,KAAK,SAASC,QAZN,WAClB,EAAKV,SAAS,CAAEO,OAAO,KAWrB,mC,GAvBUI,IAAMN,YA6BTC,I,MChCfM,IAASC,OACP,cAAC,EAAD,IACAnB,SAASoB,eAAe,W","file":"static/js/main.49001f64.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport class KeyPressed extends Component {\n  state = {\n    keyPressed: '',\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ keyPressed: 'Nothing was pressed' });\n    }, 1000);\n  }\n\n  componentDidUpdate() {\n    document.addEventListener('keyup',\n      (event: KeyboardEvent) => this.keyBoardHandler(event));\n  }\n\n  componentWillUnmount() {\n    this.inform();\n  }\n\n  inform = () => {\n    document.removeEventListener('keyup', this.keyBoardHandler);\n  };\n\n  keyBoardHandler = (event?: KeyboardEvent) => {\n    const message = `The last pressed key is ${event?.key}`;\n\n    this.setState({ keyPressed: message });\n  };\n\n  render() {\n    const message2 = this.state.keyPressed;\n\n    return (\n      <>\n        {message2}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { KeyPressed } from './Component';\nimport './App.scss';\n\ntype State = {\n  click: boolean,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    click: true,\n  };\n\n  render() {\n    const { click } = this.state;\n    const clickDestroy = () => {\n      this.setState({ click: false });\n    };\n\n    const clickCreate = () => {\n      this.setState({ click: true });\n    };\n\n    return (\n      <>\n        <div className=\"App\">\n          <p className=\"App__message\">\n            { click && <KeyPressed /> }\n          </p>\n        </div>\n        <button type=\"submit\" onClick={clickDestroy}>Destroy element</button>\n        <button type=\"submit\" onClick={clickCreate}>Create element</button>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}